/*
* This file was auto-generated by sqlgenx (https://github.com/martskins/gopherplate).
* It is advisable to keep this file unchanged.
*/

package {{ .PackageName }}

{{ range $struct := .Structs }}

  {{ if $.ShouldExport }}
    // Insert{{$struct.Name}} is the sql statement to insert a {{$struct.Name}}
    {{if $.Insert}}const Insert{{$struct.Name}} = `INSERT INTO {{.TableName}} ({{.Insert.Fields}}) VALUES ({{.Insert.PlaceHolders}})`{{end}}
    // Update{{$struct.Name}} is the sql statement to update a {{$struct.Name}}
    {{if $.Update}}const Update{{$struct.Name}} = `UPDATE {{.TableName}} SET {{.Update.Setters}} WHERE `{{end}}
    // Join{{$struct.Name}} is the sql statement to join some table with the {{$struct.Name}} table
    {{if $.Join}}const Join{{$struct.Name}} = `{{.Join.Fields}}`{{end}}
  {{ else }}
    {{if $.Insert}}const insert{{$struct.Name}} = `INSERT INTO {{.TableName}} ({{.Insert.Fields}}) VALUES ({{.Insert.PlaceHolders}})`{{end}}
    {{if $.Update}}const update{{$struct.Name}} = `UPDATE {{.TableName}} SET {{.Update.Setters}} WHERE `{{end}}
    {{if $.Join}}const join{{$struct.Name}} = `{{.Join.Fields}}`{{end}}
  {{ end }}

  // Null{{$struct.Name}} is a nullable {{$struct.Name}}, mostly useful for left joins
  type Null{{$struct.Name}} struct {
  {{range $field := $struct.Fields}}
    {{$field.Name}} *{{SanitizeType $field.Type}} {{ if $field.Tags }} {{$field.Tags}} {{ end }}{{end}}
  }

  // Valid indicates whether there is a {{$struct.Name}} in this Null{{$struct.Name}}
  func (n *Null{{$struct.Name}}) Valid() bool {
  {{range $index, $field := $struct.Fields}} {{ if and (eq $index 0) (gt (len $struct.Fields) 1) }} if n.{{$field.Name}} != nil || {{ else if eq $index 0 }} if n.{{$field.Name}} != nil { {{ else if eq $index (Dec (len $struct.Fields)) }} n.{{$field.Name}} != nil { {{ else if gt $index 0 }} n.{{$field.Name}} != nil || {{ end }} {{end}}
      return true
    }

    return false
  }

  // Get returns the {{$struct.Name}} in this Null{{$struct.Name}}
  func (n *Null{{$struct.Name}}) Get() *{{$struct.Name}} {
    if !n.Valid() {
      return nil
    }

    return &{{$struct.Name}}{ {{range $field := .Fields}}
    {{ if not (Contains $field.Type "*") }}{{$field.Name}}: *n.{{$field.Name}},{{else}}{{$field.Name}}: n.{{$field.Name}},{{end}}{{end}}
    }
  }

  // MarshalJSON marshals a Null{{$struct.Name}} to json
  func (n *Null{{$struct.Name}}) MarshalJSON() ([]byte, error) {
    if !n.Valid() {
      return []byte("null"), nil
    }

    return json.Marshal(n.Get())
  }

{{ end }}
